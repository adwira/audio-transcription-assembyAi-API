<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        .container {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        .mic-button {
            width: 100px;
            height: 100px;
            border: none;
            border-radius: 50%;
            background-color: #0057b3;
            color: white;
            font-size: 24px;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
        }
    </style>
    <div class="container">
        <button class="mic-button" id="micButton">ðŸŽ¤</button>
    </div>

    <script>
        let isRecording = false;
        const micButton = document.getElementById('micButton');
        let mediaRecorder;
        let audioChunks = [];

        micButton.addEventListener('click', async () => {
            isRecording = !isRecording;
            if (isRecording) {
                micButton.style.backgroundColor = 'red'; // Mengubah warna tombol saat merekam
                console.log('Merekam suara...');

                const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
                mediaRecorder = new MediaRecorder(stream);
                
                mediaRecorder.start();
                mediaRecorder.ondataavailable = event => {
                    audioChunks.push(event.data);
                };

                mediaRecorder.onstop = async () => {
                    const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
                    const formData = new FormData();
                    formData.append('audio', audioBlob, 'recording.wav');

                    // Kirim audio ke server
                    const response = await fetch('/upload', {
                        method: 'POST',
                        body: formData
                    });
                    const transcript = await response.json();
                    console.log(transcript.text); // Tampilkan transkrip
                };
            } else {
                micButton.style.backgroundColor = '#007bff'; // Mengembalikan warna tombol
                mediaRecorder.stop(); // Menghentikan rekaman
                audioChunks = []; // Reset audio chunks
                console.log('Rekaman dihentikan.');
            }
        });
    </script>
</body>
</html>
